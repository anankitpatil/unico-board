import { useState, useEffect, useRef } from "react";
import { DragDropContext, Droppable } from "react-beautiful-dnd";
import Head from "next/head";
import Image from "next/image";
import NavBar from "../components/NavBar";
import NavMenu from "../components/NavMenu";
import DragDropList from "../components/DragDropList";
import { Author, CardCollection } from "../data";
import {
  sortCardsByListType,
  setNewCardCollection,
} from "../helpers/functions";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [cardCollection, setCardCollection] = useState([]);
  const scrollerRef = useRef(null);

  const addCard = (data) => {
    let newCardCollection = { ...cardCollection };
    let newCard = { ...data };
    let isNewList = true;
    newCard.id = ((Math.random() * 101) | 0).toString();
    // loop through list items
    Object.keys(newCardCollection).forEach((key) => {
      if (key === data.list) {
        newCardCollection[key].push(newCard);
        isNewList = false;
      }
    });
    // create new list item
    if (isNewList) {
      newCardCollection[data.list] = [];
      newCardCollection[data.list].push(newCard);
    }
    setCardCollection(newCardCollection);
  };

  const toggleMenu = (e) => {
    e.preventDefault();
    setIsMenuOpen(!isMenuOpen);
  };

  const handleOnDragEnd = (result) =>
    setNewCardCollection(result, cardCollection, setCardCollection);

  const handleResize = () => {
    scrollerRef.current.style.width =
      scrollerRef.current.children.length * 310 + "px";
  };

  useEffect(() => {
    // Create groups of cards based on list
    setCardCollection(sortCardsByListType(CardCollection, "list"));
    // set width of board so it scrolls on x axis
    document.addEventListener("resize", handleResize, false);

    return () => {
      document.removeEventListener("resize", handleResize, false);
    };
  }, []);

  useEffect(() => {
    handleResize();
  }, [cardCollection]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Unico Connect Assignment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar addCard={addCard} toggleMenu={toggleMenu} />
      <DragDropContext onDragEnd={handleOnDragEnd}>
        <main className={styles.main}>
          <div className={styles.scroller} ref={scrollerRef}>
            {Object.keys(cardCollection).length > 0 &&
              Object.entries(cardCollection).map(([type, cardSet], i) => {
                return <DragDropList cardSet={cardSet} key={i} title={type} />;
              })}
          </div>
        </main>
      </DragDropContext>
      <footer className={styles.footer}>
        Assesment for Unico Connect, April 2022
      </footer>
      <NavMenu toggleMenu={toggleMenu} isMenuOpen={isMenuOpen} />
    </div>
  );
}
